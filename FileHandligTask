import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;

public class Task1 {
    public static void main(String[] args) {
        SwingUtilities.invokeLater(Task1::createAndShowGUI);
    }

    private static void createAndShowGUI() {
        JFrame frame = new JFrame("File Chooser");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(500, 400);
        frame.setLayout(new BorderLayout());

        JPanel contentPanel = new JPanel(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.insets = new Insets(10, 10, 10, 10);

        JButton chooseFileButton = new JButton("Choose .java or .txt files");
        JTextArea fileDetailsArea = new JTextArea(10, 40);
        fileDetailsArea.setEditable(false);
        JScrollPane scrollPane = new JScrollPane(fileDetailsArea);

        chooseFileButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setFileFilter(new FileNameExtensionFilter("Text & Java Files", "txt", "java"));
                int result = fileChooser.showOpenDialog(frame);

                if (result == JFileChooser.APPROVE_OPTION) {
                    File selectedFile = fileChooser.getSelectedFile();
                    displayFileDetails(selectedFile, fileDetailsArea);
                }
            }
        });

        contentPanel.add(chooseFileButton, gbc);
        gbc.gridy = 1;
        contentPanel.add(scrollPane, gbc);

        frame.add(contentPanel, BorderLayout.CENTER);
        frame.setVisible(true);
    }

    private static void displayFileDetails(File file, JTextArea textArea) {
        String fileName = file.getName();
        String fileExtension = "";
        int dotIndex = fileName.lastIndexOf('.');
        if (dotIndex > 0) {
            fileExtension = fileName.substring(dotIndex + 1);
        }

        StringBuilder content = new StringBuilder();
        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
            String line;
            while ((line = reader.readLine()) != null) {
                content.append(line).append("\n");
            }
        } catch (IOException ex) {
            content.append("Error reading file: ").append(ex.getMessage());
        }

        textArea.setText("File Name: " + fileName + "\n"
                + "File Extension: " + fileExtension + "\n"
                + "File Content:\n" + content.toString());
    }
}
